<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="test.Forum.TopicsLoader">
<Super>test.view</Super>
<TimeCreated>63877,12.206236</TimeCreated>

<Method name="TestUpdateAuthors">
<Implementation><![CDATA[
	#;Creating forum
			
	s forum("Name") = "Testing forum's name"

	if '##class(Forum.Forum).NameExists( forum("Name"), .forum ){
		&sql( Insert Into Forum.Forum ( Name ) Values ( :forum("Name") ))
		if SQLCODE=0 s forum = %ROWID
		}
	
	s author("ExtId") = 227003, author("Name") = "Test name"
	
	if '##class(Forum.Author).ExtIdExists(author("ExtId"), .author){
		s authorNotExisted = 1		
		#;Creating author
		
		&sql( Insert Into Forum.Author ( Name, ExtId ) Values ( :author("Name"), :author("ExtId") ))
		if SQLCODE=0 s author = %ROWID
		}
	else{
 		s sql = "Select Location, Longitude, Latitude From Forum.Author Where ExtId = ?"
 		s rs = ##class(%SQL.Statement).%ExecDirect(, sql, author("ExtId"))
 		if rs.%Next() s location = rs.Location,longitude = rs.Longitude, latitude = rs.Latitude
		
		s empty = ""
		
 		&sql( Update Forum.Author Set Location = :empty, Longitude = :empty
 			, Latitude = :empty Where ExtId =:topic("ExtId"))
		}
	
	#;Creating topic
				
	s topic("Name") = "Testing topic's name"
		, topic("ExtId") = 227003, topic("Views") = 12345
		, topic("Updated") = "2001-01-01 04:20:00", topic("Pages") = "a"
	&sql( Insert Into Forum.Topic ( Name, ExtId, Forum, Author, AuthorExtId, AuthorId, Views, Updated, Pages ) 
	Values ( :topic("Name") ,:topic("ExtId") ,:forum ,:author("Name") ,:author("ExtId")
		,:author ,:topic("Views") ,:topic("Updated") ,:topic("Pages") ))
	if SQLCODE=0 s topic = %ROWID
	
	#;Creating post
	
	s post("ExtId") = 0, post("Posted") = "2001-01-01 04:20:00"
		, post("Text") = "Testing text", post("Type") = "Testing type"
	&sql( Insert Into Forum.Post ( Topic, ExtId, Author, AuthorExtId, AuthorId, Text, Posted, Type ) 
	Values ( :topic ,:post("ExtId") ,:author("Name") ,:author("ExtId")
		,:author ,:post("Text") ,:post("Posted") ,:post("Type") ))
	if SQLCODE=0 s post = %ROWID
	
	
	s status = ##class(Forum.TopicsLoader).UpdateAuthors( forum("Name"), 0 ) 
	do $$$AssertTrue(status,"Status of method execution")
	
	s authorObj = ##class(Forum.Author).%OpenId(author)
	do $$$AssertEquals(authorObj.Latitude, "131.882421", "Checking latitude")	

	s authorObj = ##class(Forum.Author).%OpenId(author)
	do $$$AssertEquals(authorObj.Longitude, "43.116391", "Checking longitude")	

	s authorObj = ##class(Forum.Author).%OpenId(author)
	do $$$AssertEquals(authorObj.Location, "Vladivostok", "Checking location")	

	if authorNotExisted{
		s status = ##class(Forum.Author).%DeleteId( author )
		do $$$AssertTrue(status,"Nonexistence of created author object")
		}
	else{
 		&sql( Update Forum.Author Set Location = :location, Longitude = :longitude
 			, Latitude = :latitude Where ExtId =:topic("ExtId"))		
		}
		
	s status = ##class(Forum.Post).%DeleteId(post)
	do $$$AssertTrue(status,"Nonexistence of created post object")		

	s status = ##class(Forum.Topic).%DeleteId(topic)
	do $$$AssertTrue(status,"Nonexistence of created topic object")
	
	s status = ##class(Forum.Forum).%DeleteId(forum)
	do $$$AssertTrue(status,"Nonexistence of created forum object")
]]></Implementation>
</Method>

<Method name="TestUpdateAuthorLocation">
<Implementation><![CDATA[
	s author("ExtId") = 227003
	
	if '##class(Forum.Author).ExtIdExists(author("ExtId"), .author){
		
		s authorNotExisted = 1
		s author("Name") = "Test name"		
		&sql( Insert Into Forum.Author ( Name, ExtId ) Values ( :author("Name"), :author("ExtId") ))
		if SQLCODE=0 s author = %ROWID
		
	} else {
 		
 		s sql = "Select Location, Longitude, Latitude From Forum.Author Where ExtId = ?"
 		s rs = ##class(%SQL.Statement).%ExecDirect(, sql, author("ExtId"))
 		if rs.%Next() s location = rs.Location,longitude = rs.Longitude, latitude = rs.Latitude
		
		s empty = ""
		
 		&sql( Update Forum.Author Set Location = :empty, Longitude = :empty
 			, Latitude = :empty Where ExtId =:topic("ExtId"))
		}
	
	s verbose = 0 	
	s status = ##class(Forum.TopicsLoader).UpdateAuthorLocation( author,,verbose )
	do $$$AssertTrue(status,"Status of method execution")

	s authorObj = ##class(Forum.Author).%OpenId(author)
	do $$$AssertEquals(authorObj.Latitude, "131.882421", "Checking latitude")	

	s authorObj = ##class(Forum.Author).%OpenId(author)
	do $$$AssertEquals(authorObj.Longitude, "43.116391", "Checking longitude")	

	s authorObj = ##class(Forum.Author).%OpenId(author)
	do $$$AssertEquals(authorObj.Location, "Vladivostok", "Checking location")	

	if authorNotExisted{
		
		s status = ##class(Forum.Author).%DeleteId( author )
		do $$$AssertTrue(status,"Delete created author")
		
	} else {
		
 		&sql( Update Forum.Author Set Location = :location, Longitude = :longitude
 			, Latitude = :latitude Where ExtId =:topic("ExtId"))		
 			
	}
]]></Implementation>
</Method>

<Method name="TestGeolocation">
<Implementation><![CDATA[
	s locationOne = "Moscow", locationTwo = "Vladivostok", locationThree = "Saint-Petersburg"
	
	s pointOne = ##class(Forum.TopicsLoader).Geolocation( locationOne,, .status )
	do $$$AssertTrue(status,"Status of method execution")
	do $$$AssertEquals(pointOne, "37.620393 55.75396", "Checking geolocation of first city")
		
	s pointTwo = ##class(Forum.TopicsLoader).Geolocation( locationTwo,, .status )
	do $$$AssertTrue(status,"Status of method execution")
	do $$$AssertEquals(pointTwo, "131.882421 43.116391", "Checking geolocation of second city")
	
	s pointThree = ##class(Forum.TopicsLoader).Geolocation( locationThree,, .status )
	do $$$AssertTrue(status,"Status of method execution")
	do $$$AssertEquals(pointThree, "30.315868 59.939095", "Checking geolocation of third city")
]]></Implementation>
</Method>

<Method name="TestGeocoder">
<Implementation><![CDATA[
	s geocoder = ##class(Forum.TopicsLoader).Geocoder()
	
	do $$$AssertEquals(geocoder.Server, "geocode-maps.yandex.ru", "Checking property ""Server""")
	do $$$AssertEquals(geocoder.SSLConfiguration, "geocode-maps.yandex.ru", "Checking property ""SSLConfiguration""")
	do $$$AssertEquals(geocoder.Https, 1, "Checking property ""Https""")
]]></Implementation>
</Method>

<Method name="TestSSLConfig">
<Implementation><![CDATA[
	s config = "Test SSL configuration"
	
	s ns = $namespace,  $namespace = "%SYS"
	s status = ##class(Security.SSLConfigs).Exists( config )
	if status {
		s configExisted = 1
		s status = ##class(Security.SSLConfigs).Delete( config )
		do $$$AssertTrue(status,"Delete test SSL configuration")	
		s status = ##class(Security.SSLConfigs).Exists( config )
		}
	do $$$AssertNotTrue(status,"Nonexistence of test SSL configuration")
	s $namespace = ns
	
	s status = ##class(Forum.TopicsLoader).SSLConfig( config )
	do $$$AssertTrue(status,"Status of method execution")
	
	s $namespace = "%SYS"
	s status = ##class(Security.SSLConfigs).Exists( config )
	do $$$AssertTrue(status,"Existence of test SSL configuration")
	s $namespace = ns
	
	s status = ##class(Forum.TopicsLoader).SSLConfig( config )
	do $$$AssertTrue(status,"Status of method execution")
	
	if $d(configExisted)'=1{
		s $namespace = "%SYS"
		s status = ##class(Security.SSLConfigs).Delete( config )
		do $$$AssertTrue(status,"Delete test SSL configuration")
		s $namespace = ns
		}
]]></Implementation>
</Method>

<Method name="TestLoadPosts">
<Implementation><![CDATA[
 	//#1
 	//If there was not the topic
 	//Find Id of last authors that was before load of posts = authorsLastId
 	//Create forum and topic with only required test properties and topic("ExtId")
 	//Load all posts
 	//Delete forum, topic, posts
 	//Remove authors Id greater than authorsLastId
 	//#2
 	//If there was the topic with external id = topic("ExtId")
 	//First create forum with only required test properties and change id of forum in topic's property "Forum"
 	//Find all posts of topic with external id = topic("ExtId")
 	//Find how many there were posts = postsAmount and then delete all posts of this topic
 	//Load all posts
 	//After posts load, remove all but the first postsAmount
 	//Change topic's property "Forum" and delete created test forum
 	
 	s topic("ExtId") = 1184176 //Page of this topic "http://www.sql.ru/forum/1184176/"
 	
 	#;1
 	if '##class(Forum.Topic).ExtIdExists( topic("ExtId"), .topic ){	
 	
 		s sql = "Select Count(Id) As Amount From Forum.Author"
 		s rs = ##class(%SQL.Statement).%ExecDirect(,sql)
 		if rs.%Next() s authorsAmount = rs.Amount
 		if authorsAmount>0 {		
 			s sql = "Select Top ? Id From Forum.Author Order By Id Desc"
 			s rs = ##class(%SQL.Statement).%ExecDirect(,sql,1)
 			if rs.%Next() s authorsLastId = rs.Id
 			}
 		else{
 			s authorsLastId = 0
 			}
 		
 		#;Creating forum
 				
 		s forum("Name") = "Testing forum's name"
 
 		if '##class(Forum.Forum).NameExists( forum("Name"), .forum ){
 			&sql( Insert Into Forum.Forum ( Name ) Values ( :forum("Name") ))
 			if SQLCODE=0 s forum = %ROWID
 			}
 	
 		#;Creating topic
 					
 		s topic("Name") = "Testing topic's name"
 		, topic("Author") = "Testing topic's author", topic("Views") = 12345
 		, topic("Updated") = "2001-01-01 04:20:00", topic("Pages") = "a"
 		&sql( Insert Into Forum.Topic ( Name, ExtId, Forum, Author, Views, Updated, Pages ) 
 		Values ( :topic("Name") ,:topic("ExtId") ,:forum ,:topic("Author") ,:topic("Views") ,:topic("Updated") ,:topic("Pages") ))
 		if SQLCODE=0 s topic = %ROWID
 		}
 	#;2
 	else{
 		#;Creating forum
 				
 		s forum("Name") = "Testing forum's name"
 
 		if '##class(Forum.Forum).NameExists( forum("Name"), .forum ){
 			&sql( Insert Into Forum.Forum ( Name ) Values ( :forum("Name") ))
 			if SQLCODE=0 s forum = %ROWID
 			}
 		
 		s sql = "Select Forum From Forum.Topic Where ExtId = ? "
 		s rs = ##class(%SQL.Statement).%ExecDirect(,sql, topic("ExtId"))
 		if rs.%Next() s forumIdWas = rs.Forum
 		
 		&sql( Update Forum.Topic Set Forum = :forum	Where ExtId =:topic("ExtId"))
 						
 		s sql = "Select Count(Id) As Amount From Forum.Post Where Topic->ExtId = ?"
 		s rs = ##class(%SQL.Statement).%ExecDirect(,sql, topic("ExtId"))
 		if rs.%Next() s postsAmount = rs.Amount
 		
 		#;Delete all posts of topic
 
 		s sql = "Select Id From Forum.Post Where Topic->ExtId = ? "
 		s rs = ##class(%SQL.Statement).%ExecDirect(,sql, topic("ExtId"))
 		while rs.%Next(){
 			s tmpId = rs.Id
 			s sc = ##class(Forum.Post).%DeleteId(tmpId)
 		}
 	}
 	s verbose = 0
 	s sc = ##class(Forum.TopicsLoader).LoadPosts( forum("Name"), verbose )
 	
 	
 	s status = ##class(Forum.Post).ExtIdExists(18390235, .postId)
 	do $$$AssertTrue(status,"Existence of post with ExtId = 18390235")
 	s status = ##class(Forum.Post).ExtIdExists(18390500, .postId)
 	do $$$AssertTrue(status,"Existence of post with ExtId = 18390500")
 	s status = ##class(Forum.Post).ExtIdExists(18406989, .postId)
 	do $$$AssertTrue(status,"Existence of post with ExtId = 18406989")
 	s status = ##class(Forum.Post).ExtIdExists(18409879, .postId)
 	do $$$AssertTrue(status,"Existence of post with ExtId = 18409879")
 	s status = ##class(Forum.Post).ExtIdExists(18390235, .postId)
 	do $$$AssertTrue(status,"Existence of post with ExtId = 18390235")
 	
 	if $g(authorsLastId)'=""{
 		#;Delete posts
 		s sql = "Select Id From Forum.Post Where Topic->ExtId = ? "
 		s rs = ##class(%SQL.Statement).%ExecDirect(,sql, topic("ExtId"))
 		while rs.%Next(){
 			s tmpId = rs.Id
 			s sc = ##class(Forum.Post).%DeleteId(tmpId)
 		}
 		#;Check posts nonexistence
 		s sql = "Select Count(Id) As Amount From Forum.Post Where Topic->ExtId = ? "
 		s rs = ##class(%SQL.Statement).%ExecDirect(,sql, topic("ExtId"))
 		if rs.%Next() s amount = rs.Amount
 		do $$$AssertEquals(amount,0,"Nonexistence of posts")
 		
 		s status = ##class(Forum.Topic).%DeleteId(topic)
 		do $$$AssertTrue(status,"Nonexistence of created topic object")
 		
 		s status = ##class(Forum.Forum).%DeleteId(forum)
 		do $$$AssertTrue(status,"Nonexistence of created forum object")
 		
 		#;Delete new authors
 		s sql = "Select Id From Forum.Author Where Id > ? "
 		s rs = ##class(%SQL.Statement).%ExecDirect(,sql, authorsLastId)
 		while rs.%Next(){
 			s tmpId = rs.Id
 			s sc = ##class(Forum.Author).%DeleteId(tmpId)
 		}
 		#;Check new authors nonexistence
 		s sql = "Select Count(Id) As Amount From Forum.Author Where Id > ? "
 		s rs = ##class(%SQL.Statement).%ExecDirect(,sql, authorsLastId)
 		if rs.%Next() s amount = rs.Amount
 		do $$$AssertEquals(amount,0,"Nonexistence of new authors")
 		}
 	else{
 		s sql = "Select Id From Forum.Post Where Topic->ExtId = ? "
 		s rs = ##class(%SQL.Statement).%ExecDirect(,sql, topic("ExtId"))
 		s num = 0
 		while rs.%Next(){
 			s tmpId = rs.Id
 			if num<postsAmount {
 				s num = num + 1
 				Continue
 				}  
 			s sc = ##class(Forum.Post).%DeleteId(tmpId)
 			}
 		s sql = "Select Count(Id) As Amount From Forum.Post Where Topic->ExtId = ?"
 		s rs = ##class(%SQL.Statement).%ExecDirect(,sql, topic("ExtId"))
 		if rs.%Next() s amount = rs.Amount
 		do $$$AssertEquals(amount,postsAmount,"Nonexistence of new posts")				
 		
 		&sql( Update Forum.Topic Set Forum = :forumIdWas Where ExtId =:topic("ExtId"))
 	
 		s status = ##class(Forum.Forum).%DeleteId(forum)
 		do $$$AssertTrue(status,"Nonexistence of created forum object")
 		}
]]></Implementation>
</Method>

<Method name="TestOnTopic">
<Implementation><![CDATA[
 	s forum("Name") = "Testing forum's name"
 	
 	s status = ##class(Forum.Forum).NameExists( forum("Name"), .tmpId )
 	if status = 1 {
 		d ##class(Forum.Forum).%DeleteId( tmpId )
 		k status, tmpId
 		}
 	
 	s topic("Type") = "Testing type",topic("Name") = "Testing topic's name", topic("ExtId") = 0
 		, topic("Answers") = 152, topic("Views") = 12345, topic("PagesAmount") = "a"
 		, topic("Updated") = "2001-01-01 04:20:00"
 	
 	s topicObj = ##class(Forum.TopicsLoader).%New()
 	s topicObj.Verbose = 0
 	s topicObj.Forum = forum("Name")
 	
 	s status = topicObj.OnTopic(.topic)
 	do $$$AssertNotTrue(status,"Nonexistence of forum object")
 	
 	#;Creating forum
 	
 		
 	&sql( Insert Into Forum.Forum ( Name ) 
 	Values ( :forum("Name") ))
 	if SQLCODE=0 s forum = %ROWID
 	
 	#;Creating author
 	
 	s author("Name") = "Testing author's name"
 	
 	s status = ##class(Forum.Author).NameExists( author("Name"), .tmpId )
 	if status = 1 {
 		d ##class(Forum.Author).%DeleteId( tmpId )
 		k status, tmpId
 		}
 		
 	&sql( Insert Into Forum.Author ( Name ) 
 	Values ( :author("Name") ))
 	if SQLCODE=0 s author = %ROWID
 	
 	s topic("Author") = author("Name")
 	
 	s status = topicObj.OnTopic(.topic)
 	do $$$AssertTrue(status,"Status of method executing")
 
 	
 	s topicObj = ##class(Forum.Topic).%OpenId(topic)
 	s authorObj = ##class(Forum.Author).%OpenId(author)
 	s forumObj = ##class(Forum.Forum).%OpenId(forum)
 	
 	do $$$AssertEquals(topicObj.Forum,forumObj,"Testing Topic's property ""Forum""")
 	do $$$AssertEquals(topicObj.Type,topic("Type"),"Testing Topic's property ""Type""")
 	do $$$AssertEquals(topicObj.Name,topic("Name"),"Testing Topic's property ""Name""")
 	do $$$AssertEquals(topicObj.ExtId,topic("ExtId"),"Testing Topic's property ""ExtId""")
 	do $$$AssertEquals(topicObj.Author,topic("Author"),"Testing Topic's property ""Author""")
 	do $$$AssertEquals(topicObj.AuthorId,authorObj,"Testing Topic's property ""AuthorId""")
 	do $$$AssertEquals(topicObj.Answers,topic("Answers"),"Testing Topic's property ""Answers""")
 	do $$$AssertEquals(topicObj.Views,topic("Views"),"Testing Topic's property ""Views""")
 	do $$$AssertEquals(topicObj.Pages,topic("PagesAmount"),"Testing Topic's property ""Pages""")
 	do $$$AssertEquals(topicObj.Updated,topic("Updated"),"Testing Topic's property ""Updated""")
 	
 	s st = ##class(Forum.Topic).%DeleteId( topic )
 	do $$$AssertTrue(st,"Delete created object")
 	s st = ##class(Forum.Author).%DeleteId( author )
 	do $$$AssertTrue(st,"Delete created object")
 	s st = ##class(Forum.Forum).%DeleteId( forum )
 	do $$$AssertTrue(st,"Delete created object")
]]></Implementation>
</Method>

<Method name="TestDeleteTopics">
<Implementation><![CDATA[
 	#;Creating forum
 				
 	s forum("Name") = "Testing forum's name"
 	
 	s status = ##class(Forum.Forum).NameExists( forum("Name"), .tmpId )
 	if status = 1 {
 		d ##class(Forum.Forum).%DeleteId( tmpId )
 		k status, tmpId
 		}
 	
 	if '##class(Forum.Forum).NameExists( forum("Name"), .forum ){
 		&sql( Insert Into Forum.Forum ( Name ) Values ( :forum("Name") ))
 		if SQLCODE=0 s forum = %ROWID
 		}
 
 	#;Creating topics
 	#;1	
 	s topicFirst("Name") = "Testing first topic's name", topicFirst("ExtId") = 1
 	, topicFirst("Author") = "Testing first topic's author", topicFirst("Views") = 12345
 	, topicFirst("Updated") = "2001-01-01 04:20:00", topicFirst("Pages") = "a"
 	&sql( Insert Into Forum.Topic ( Name, ExtId, Forum, Author, Views, Updated, Pages ) 
 	Values ( :topicFirst("Name") ,:topicFirst("ExtId") ,:forum ,:topicFirst("Author")
 	 ,:topicFirst("Views") ,:topicFirst("Updated") ,:topicFirst("Pages") ))
 	if SQLCODE=0 s topicFirst = %ROWID
 	
 	#;2		
 	s topicSecond("Name") = "Testing second topic's name", topicSecond("ExtId") = 2
 	, topicSecond("Author") = "Testing second topic's author", topicSecond("Views") = 12345
 	, topicSecond("Updated") = "2002-01-01 04:20:00", topicSecond("Pages") = "a"
 	&sql( Insert Into Forum.Topic ( Name, ExtId, Forum, Author, Views, Updated, Pages ) 
 	Values ( :topicSecond("Name") ,:topicSecond("ExtId") ,:forum ,:topicSecond("Author")
 	 ,:topicSecond("Views") ,:topicSecond("Updated") ,:topicSecond("Pages") ))
 	if SQLCODE=0 s topicSecond = %ROWID
 	
 	#;3		
 	s topicThird("Name") = "Testing third topic's name", topicThird("ExtId") = 3
 	, topicThird("Author") = "Testing third topic's author", topicThird("Views") = 12345
 	, topicThird("Updated") = "2003-01-01 04:20:00", topicThird("Pages") = "a"
 	&sql( Insert Into Forum.Topic ( Name, ExtId, Forum, Author, Views, Updated, Pages ) 
 	Values ( :topicThird("Name") ,:topicThird("ExtId") ,:forum ,:topicThird("Author")
 	 ,:topicThird("Views") ,:topicThird("Updated") ,:topicThird("Pages") ))
 	if SQLCODE=0 s topicThird = %ROWID
 	
 	#;4		
 	s topicFourth("Name") = "Testing fourth topic's name", topicFourth("ExtId") = 4
 	, topicFourth("Author") = "Testing fourth topic's author", topicFourth("Views") = 12345
 	, topicFourth("Updated") = "2004-01-01 04:20:00", topicFourth("Pages") = "a"
 	&sql( Insert Into Forum.Topic ( Name, ExtId, Forum, Author, Views, Updated, Pages ) 
 	Values ( :topicFourth("Name") ,:topicFourth("ExtId") ,:forum ,:topicFourth("Author")
 	 ,:topicFourth("Views") ,:topicFourth("Updated") ,:topicFourth("Pages") ))
 	if SQLCODE=0 s topicFourth = %ROWID
 	
 	#;5		
 	s topicFifth("Name") = "Testing fifth topic's name", topicFifth("ExtId") = 5
 	, topicFifth("Author") = "Testing fifth topic's author", topicFifth("Views") = 12345
 	, topicFifth("Updated") = "2005-01-01 04:20:00", topicFifth("Pages") = "a"
 	&sql( Insert Into Forum.Topic ( Name, ExtId, Forum, Author, Views, Updated, Pages ) 
 	Values ( :topicFifth("Name") ,:topicFifth("ExtId") ,:forum ,:topicFifth("Author")
 	 ,:topicFifth("Views") ,:topicFifth("Updated") ,:topicFifth("Pages") ))
 	if SQLCODE=0 s topicFifth = %ROWID
 	
 	s status = ##class(Forum.Forum).NameExists(forum("Name"))
 	do $$$AssertTrue(status,"Existence of forum object")
 	s status = ##class(Forum.Topic).NameExists(topicFirst("Name"))
 	do $$$AssertTrue(status,"Existence of first topic object")
 	s status = ##class(Forum.Topic).NameExists(topicSecond("Name"))
 	do $$$AssertTrue(status,"Existence of second topic object")
 	s status = ##class(Forum.Topic).NameExists(topicThird("Name"))
 	do $$$AssertTrue(status,"Existence of third topic object")
 	s status = ##class(Forum.Topic).NameExists(topicFourth("Name"))
 	do $$$AssertTrue(status,"Existence of fourth topic object")
 	s status = ##class(Forum.Topic).NameExists(topicFifth("Name"))
 	do $$$AssertTrue(status,"Existence of fifth topic object")
 	
 	s verbose = 0
 	s status = ##class(Forum.TopicsLoader).DeleteTopics( forum, verbose )
 	do $$$AssertTrue(status,"Status of method executing")
 	
 	s status = ##class(Forum.Topic).NameExists(topicFirst("Name"))
 	do $$$AssertNotTrue(status,"Nonexistence of first topic object")
 	s status = ##class(Forum.Topic).NameExists(topicSecond("Name"))
 	do $$$AssertNotTrue(status,"Nonexistence of second topic object")
 	s status = ##class(Forum.Topic).NameExists(topicThird("Name"))
 	do $$$AssertNotTrue(status,"Nonexistence of third topic object")
 	s status = ##class(Forum.Topic).NameExists(topicFourth("Name"))
 	do $$$AssertNotTrue(status,"Nonexistence of fourth topic object")
 	s status = ##class(Forum.Topic).NameExists(topicFifth("Name"))
 	do $$$AssertNotTrue(status,"Nonexistence of fifth topic object")
 
 	s status = ##class(Forum.Forum).%DeleteId(forum)
 	do $$$AssertTrue(status,"Nonexistence of forum object")
]]></Implementation>
</Method>

<Method name="TestDeletePosts">
<Implementation><![CDATA[
 	#;Creating forum
 	
 	s forum("Name") = "Testing forum's name"
 	
 	s status = ##class(Forum.Forum).NameExists( forum("Name"), .tmpId )
 	if status = 1 {
 		d ##class(Forum.Forum).%DeleteId( tmpId )
 		k status, tmpId
 		}
 		
 	&sql( Insert Into Forum.Forum ( Name ) 
 	Values ( :forum("Name") ))
 	if SQLCODE=0 s forum = %ROWID
 	
 	#;Creating topic
 	
 	s topic("Name") = "Testing topic's name", topic("ExtId") = 0
 		, topic("Author") = "Testing topic's author", topic("Views") = 12345
 		, topic("Updated") = "2001-01-01 04:20:00"
 	
 	s status = ##class(Forum.Topic).ExtIdExists( topic("ExtId"), .tmpId )
 	if status = 1 {
 		d ##class(Forum.Topic).%DeleteId( tmpId )
 		k status, tmpId
 		}
 		
 	&sql( Insert Into Forum.Topic ( Name, ExtId, Forum, Author, Views, Updated ) 
 	Values ( :topic("Name") ,:topic("ExtId") ,:forum ,:topic("Author") ,:topic("Views") ,:topic("Updated") ))
 	if SQLCODE=0 s topic = %ROWID
 	
 	#;Creating author
 	
 	s author("Name") = "Testing author's name"
 	
 	s status = ##class(Forum.Author).NameExists( author("Name"), .tmpId )
 	if status = 1 {
 		d ##class(Forum.Author).%DeleteId( tmpId )
 		k status, tmpId
 		}
 		
 	&sql( Insert Into Forum.Author ( Name ) 
 	Values ( :author("Name") ))
 	if SQLCODE=0 s author = %ROWID
 	
 	#;Creating posts
 	#;1
 	s postFirst("Topic") = topic, postFirst("ExtId") = 1
 		, postFirst("Author") = "Testing author", postFirst("Author","ExtId") = "Testing external Id of author"
 		, postFirst("AuthorId") = author, postFirst("Posted") = "2001-01-01 04:20:00"
 		, postFirst("Text") = "Testing text", postFirst("Type") = "Testing type"
 	
 	s status = ##class(Forum.Post).ExtIdExists( postFirst("ExtId"), .tmpId )
 	if status = 1 {
 		d ##class(Forum.Post).%DeleteId( tmpId )
 		k status, tmpId
 		}
 	
 	&sql( Insert Into Forum.Post ( Topic, ExtId, Author, AuthorExtId, AuthorId, Posted, Text, Type ) 
 	Values ( :postFirst("Topic"), :postFirst("ExtId")
 			, :postFirst("Author"), :postFirst("Author","ExtId"), :postFirst("AuthorId")
 			, :postFirst("Posted"), :postFirst("Text"), :postFirst("Type") ))
 	if SQLCODE=0 s postFirst = %ROWID
 		
 	#;2
 	s postSecond("Topic") = topic, postSecond("ExtId") = 2
 		, postSecond("Author") = "Testing author", postSecond("Author","ExtId") = "Testing external Id of author"
 		, postSecond("AuthorId") = author, postSecond("Posted") = "2001-01-01 04:20:00"
 		, postSecond("Text") = "Testing text", postSecond("Type") = "Testing type"
 	
 	s status = ##class(Forum.Post).ExtIdExists( postSecond("ExtId"), .tmpId )
 	if status = 1 {
 		d ##class(Forum.Post).%DeleteId( tmpId )
 		k status, tmpId
 		}
 
 	&sql( Insert Into Forum.Post ( Topic, ExtId, Author, AuthorExtId, AuthorId, Posted, Text, Type ) 
 	Values ( :postSecond("Topic"), :postSecond("ExtId")
 			, :postSecond("Author"), :postSecond("Author","ExtId"), :postSecond("AuthorId")
 			, :postSecond("Posted"), :postSecond("Text"), :postSecond("Type") ))
 	if SQLCODE=0 s postSecond = %ROWID
 			
 	#;3
 	s postThird("Topic") = topic, postThird("ExtId") = 3
 		, postThird("Author") = "Testing author", postThird("Author","ExtId") = "Testing external Id of author"
 		, postThird("AuthorId") = author, postThird("Posted") = "2001-01-01 04:20:00"
 		, postThird("Text") = "Testing text", postThird("Type") = "Testing type"
 	
 	s status = ##class(Forum.Post).ExtIdExists( postThird("ExtId"), .tmpId )
 	if status = 1 {
 		d ##class(Forum.Post).%DeleteId( tmpId )
 		k status, tmpId
 		}
 	
 	&sql( Insert Into Forum.Post ( Topic, ExtId, Author, AuthorExtId, AuthorId, Posted, Text, Type ) 
 	Values ( :postThird("Topic"), :postThird("ExtId")
 			, :postThird("Author"), :postThird("Author","ExtId"), :postThird("AuthorId")
 			, :postThird("Posted"), :postThird("Text"), :postThird("Type") ))
 	if SQLCODE=0 s postThird = %ROWID
 		
 	#;4
 	s postFourth("Topic") = topic, postFourth("ExtId") = 4
 		, postFourth("Author") = "Testing author", postFourth("Author","ExtId") = "Testing external Id of author"
 		, postFourth("AuthorId") = author, postFourth("Posted") = "2001-01-01 04:20:00"
 		, postFourth("Text") = "Testing text", postFourth("Type") = "Testing type"
 	
 	s status = ##class(Forum.Post).ExtIdExists( postFourth("ExtId"), .tmpId )
 	if status = 1 {
 		d ##class(Forum.Post).%DeleteId( tmpId )
 		k status, tmpId
 		}
 	
 	&sql( Insert Into Forum.Post ( Topic, ExtId, Author, AuthorExtId, AuthorId, Posted, Text, Type ) 
 	Values ( :postFourth("Topic"), :postFourth("ExtId")
 			, :postFourth("Author"), :postFourth("Author","ExtId"), :postFourth("AuthorId")
 			, :postFourth("Posted"), :postFourth("Text"), :postFourth("Type") ))
 	if SQLCODE=0 s postFourth = %ROWID
 		
 	#;5
 	s postFifth("Topic") = topic, postFifth("ExtId") = 5
 		, postFifth("Author") = "Testing author", postFifth("Author","ExtId") = "Testing external Id of author"
 		, postFifth("AuthorId") = author, postFifth("Posted") = "2001-01-01 04:20:00"
 		, postFifth("Text") = "Testing text", postFifth("Type") = "Testing type"
 	
 	s status = ##class(Forum.Post).ExtIdExists( postFifth("ExtId"), .tmpId )
 	if status = 1 {
 		d ##class(Forum.Post).%DeleteId( tmpId )
 		k status, tmpId
 		}
 	
 	&sql( Insert Into Forum.Post ( Topic, ExtId, Author, AuthorExtId, AuthorId, Posted, Text, Type ) 
 	Values ( :postFifth("Topic"), :postFifth("ExtId")
 			, :postFifth("Author"), :postFifth("Author","ExtId"), :postFifth("AuthorId")
 			, :postFifth("Posted"), :postFifth("Text"), :postFifth("Type") ))
 	if SQLCODE=0 s postFifth = %ROWID
 		
 	s status = ##class(Forum.Forum).NameExists(forum("Name"))
 	do $$$AssertTrue(status,"Existence of forum object")
 	s status = ##class(Forum.Topic).NameExists(topic("Name"))
 	do $$$AssertTrue(status,"Existence of topic object")
 	s status = ##class(Forum.Author).NameExists(author("Name"))
 	do $$$AssertTrue(status,"Existence of author object")
 	s status = ##class(Forum.Post).ExtIdExists(postFirst("ExtId"))
 	do $$$AssertTrue(status,"Existence of first post object")
 	s status = ##class(Forum.Post).ExtIdExists(postSecond("ExtId"))
 	do $$$AssertTrue(status,"Existence of second post object")
 	s status = ##class(Forum.Post).ExtIdExists(postThird("ExtId"))
 	do $$$AssertTrue(status,"Existence of third post object")
 	s status = ##class(Forum.Post).ExtIdExists(postFourth("ExtId"))
 	do $$$AssertTrue(status,"Existence of fourth post object")
 	s status = ##class(Forum.Post).ExtIdExists(postFifth("ExtId"))
 	do $$$AssertTrue(status,"Existence of fifth post object")
 	
 	s verbose = 0 
 	s status = ##class(Forum.TopicsLoader).DeletePosts( forum, verbose )
 	do $$$AssertTrue( status, "Status of method executing" )
 	
 	s status = ##class(Forum.Topic).ExtIdExists(postFirst("ExtId"))
 	do $$$AssertNotTrue(status,"Nonexistence of first post object")
 	s status = ##class(Forum.Topic).ExtIdExists(postSecond("ExtId"))
 	do $$$AssertNotTrue(status,"Nonexistence of second post object")
 	s status = ##class(Forum.Topic).ExtIdExists(postThird("ExtId"))
 	do $$$AssertNotTrue(status,"Nonexistence of third post object")
 	s status = ##class(Forum.Topic).ExtIdExists(postFourth("ExtId"))
 	do $$$AssertNotTrue(status,"Nonexistence of fourth post object")
 	s status = ##class(Forum.Topic).ExtIdExists(postFifth("ExtId"))
 	do $$$AssertNotTrue(status,"Nonexistence of fifth post object")
 	
 	s status = ##class(Forum.Author).%DeleteId(author)
 	do $$$AssertTrue(status,"Nonexistence of author object")
 	s status = ##class(Forum.Topic).%DeleteId(topic)
 	do $$$AssertTrue(status,"Nonexistence of topic object")
 	s status = ##class(Forum.Forum).%DeleteId(forum)
 	do $$$AssertTrue(status,"Nonexistence of forum object")
]]></Implementation>
</Method>
</Class>
</Export>
