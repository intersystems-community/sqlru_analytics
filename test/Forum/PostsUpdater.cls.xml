<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="test.Forum.PostsUpdater">
<Super>test.view</Super>
<TimeCreated>63875,83579.875958</TimeCreated>

<Method name="TestScan">
<Implementation><![CDATA[
	//Topic with ExtId = 349188 had 17 pages on 27.11.2015
	//We will load posts from 37(just random number of post 
	//from 2 page(just random number of page)) to 75(number of last post on 3 page)
	
	s data("topic") = 349188
	s data("pages") = 3
	
 	//Find Id of last authors that was before load of posts = authorsLastId
	
	s sql = "Select Count(Id) As Amount From Forum.Author"
	s rs = ##class(%SQL.Statement).%ExecDirect(,sql)
	if rs.%Next() s authorsAmount = rs.Amount
	if authorsAmount>0 {		
		s sql = "Select Top ? Id From Forum.Author Order By Id Desc"
		s rs = ##class(%SQL.Statement).%ExecDirect(,sql,1)
		if rs.%Next() s authorsLastId = rs.Id
		}
	else{
		s authorsLastId = 0
		}
	
	if '##class(Forum.Topic).ExtIdExists(data("topic"),.topic){
		s topicNotExist = 1
		
		#;Creating forum
			
		s forum("Name") = "Testing forum's name"

		if '##class(Forum.Forum).NameExists( forum("Name"), .forum ){
			&sql( Insert Into Forum.Forum ( Name ) Values ( :forum("Name") ))
			if SQLCODE=0 s forum = %ROWID
			}
		
		#;Creating author
			
		s author("ExtId") = 0, author("Name") = "Test name"
		
		if '##class(Forum.Author).ExtIdExists(author("ExtId"), .author){
			&sql( Insert Into Forum.Author ( Name, ExtId ) Values ( :author("Name"), :author("ExtId") ))
			if SQLCODE=0 s author = %ROWID
			}
		
		#;Creating topic
		
		s topic("Name") = "Testing topic's name", topic("Views") = 12345
			, topic("Updated") = "2001-01-01 04:20:00", topic("Pages") = "a"
		&sql( Insert Into Forum.Topic ( Name, ExtId, Forum, Author, AuthorExtId, AuthorId, Views, Updated, Pages ) 
		Values ( :topic("Name") ,:data("topic") ,:forum ,:author("Name") ,:author("ExtId")
			,:author ,:topic("Views") ,:topic("Updated") ,:topic("Pages") ))
		if SQLCODE=0 s topic = %ROWID
		}
	
	s sql = "Select Count(Id) As Amount From Forum.Post Where Topic->ExtId = ?"
	s rs = ##class(%SQL.Statement).%ExecDirect(,sql, data("topic"))
	if rs.%Next() s postsWas = rs.Amount
	
	s data("from") = 37, data("to") = 75 //data("to")=data("from")+38
	
	s postsIs = postsWas
	
	if postsWas>data("from"){
		s sql = "Select ID From Forum.Post Where Topic->ExtId = ? Order By ExtId Asc"
		s rs = ##class(%SQL.Statement).%ExecDirect(,sql, data("topic"))
		s num = 0
		while rs.%Next(){
  			s num = num + 1
			s tmpId = rs.Id
 			if num<=data("from") {Continue}
 			elseif num>data("to") {Q}
 			s sc = ##class(Forum.Post).%DeleteId(tmpId)
 			}
		s sql = "Select Count(Id) As Amount From Forum.Post Where Topic->ExtId = ?"
		s rs = ##class(%SQL.Statement).%ExecDirect(,sql, data("topic"))
		if rs.%Next() s postsIs = rs.Amount
		}
	
	s status = ##class(Forum.PostsUpdater).Scan(.data)
	do $$$AssertTrue(status, "Status of method exucution")
	
	s sql = "Select Count(Id) As Amount From Forum.Post Where Topic->ExtId = ?"
	s rs = ##class(%SQL.Statement).%ExecDirect(,sql, data("topic"))
	if rs.%Next() s postsAmount = rs.Amount
	
	do $$$AssertEquals(postsAmount, postsIs + 38, "Checking number of added posts")
		
	if postsWas<data("to"){
		s sql = "Select ID From Forum.Post Where Topic->ExtId = ? Order By ExtId Asc"
		s rs = ##class(%SQL.Statement).%ExecDirect(,sql, data("topic"))
		s num = 0
		while rs.%Next(){
  			s num = num + 1
			s tmpId = rs.Id
 			if num<=postsWas Continue
 			s sc = ##class(Forum.Post).%DeleteId(tmpId)
 			}
		}

	s sql = "Select Count(Id) As Amount From Forum.Post Where Topic->ExtId = ?"
	s rs = ##class(%SQL.Statement).%ExecDirect(,sql, data("topic"))
	if rs.%Next() s postsIs = rs.Amount
	do $$$AssertEquals(postsIs, postsWas, "Checking number of posts after removing added posts")
	
	if $g(topicNotExist) = 1{
		s status = ##class(Forum.Topic).%DeleteId(topic)
		do $$$AssertTrue(status,"Nonexistence of created topic object")
		
		s status = ##class(Forum.Forum).%DeleteId(forum)
		do $$$AssertTrue(status,"Nonexistence of created forum object")
		}
	#;Delete new authors
	s sql = "Select Id From Forum.Author Where Id > ? "
	s rs = ##class(%SQL.Statement).%ExecDirect(,sql, authorsLastId)
	while rs.%Next(){
		s tmpId = rs.Id
		s sc = ##class(Forum.Author).%DeleteId(tmpId)
	}
	#;Check new authors nonexistence
	s sql = "Select Count(Id) As Amount From Forum.Author Where Id > ? "
	s rs = ##class(%SQL.Statement).%ExecDirect(,sql, authorsLastId)
	if rs.%Next() s amount = rs.Amount
	do $$$AssertEquals(amount,0,"Nonexistence of new authors")
]]></Implementation>
</Method>

<Method name="TestOnPost">
<Implementation><![CDATA[
	#;Creating forum
	
	s forum("Name") = "Testing forum's name"
	
	s status = ##class(Forum.Forum).NameExists( forum("Name"), .tmpId )
	if status = 1 {
		d ##class(Forum.Forum).%DeleteId( tmpId )
		k status, tmpId
		}
		
	&sql( Insert Into Forum.Forum ( Name ) 
	Values ( :forum("Name") ))
	if SQLCODE=0 s forum = %ROWID
	s forumNotExist = 1
	
	#;Creating topic
	
	s topic("Name") = "Testing topic's name", topic("ExtId") = 0
		, topic("Author") = "Testing topic's author", topic("Views") = 12345
		, topic("Updated") = "2001-01-01 04:20:00"
	
	s status = ##class(Forum.Topic).ExtIdExists( topic("ExtId"), .tmpId )
	if status = 1 {
		d ##class(Forum.Topic).%DeleteId( tmpId )
		k status, tmpId
		}
		
	&sql( Insert Into Forum.Topic ( Name, ExtId, Forum, Author, Views, Updated ) 
	Values ( :topic("Name") ,:topic("ExtId") ,:forum ,:topic("Author") ,:topic("Views") ,:topic("Updated") ))
	if SQLCODE=0 s topic = %ROWID
	s topicNotExist = 1
	
	#;Creating post
	
	s post("ExtId") = 0	, post("Author") = "Testing author"
		, post("Author","ExtId") = "Testing external Id of author"
		, post("Posted") = "2001-01-01 04:20:00"
		, post("Text") = "Testing text", post("Type") = "Testing type"
	
	s status = ##class(Forum.Post).ExtIdExists( post("ExtId"), .tmpId )
	if status = 1 {
		d ##class(Forum.Post).%DeleteId( tmpId )
		k status, tmpId
		} 
	s postObj = ##class(Forum.PostsLoader).%New()
	s postObj.Verbose = 0 
	s postObj.Topic = topic("ExtId")
	
	s status = postObj.OnPost(.post)
	do $$$AssertTrue(status,"Status of method exucution")
	
	s status = ##class(Forum.Post).%ExistsId(post)
	do $$$AssertTrue(status,"Existence of test post")
	s status = ##class(Forum.Post).%DeleteId(post)
	do $$$AssertTrue(status,"Delete test post")
	
	s status = ##class(Forum.Author).%ExistsId(post("AuthorId"))
	do $$$AssertTrue(status,"Existence of test author")
	s status = ##class(Forum.Author).%DeleteId(post("AuthorId"))
	do $$$AssertTrue(status,"Delete test author")
	
	if topicNotExist{
		s status = ##class(Forum.Topic).%DeleteId(topic)
		do $$$AssertTrue(status,"Delete test topic")
		}	
	
	if forumNotExist{
		s status = ##class(Forum.Forum).%DeleteId(forum)
		do $$$AssertTrue(status,"Delete test fotum")
		}
]]></Implementation>
</Method>
</Class>
</Export>
