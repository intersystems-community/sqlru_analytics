<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Forum.TopicsUpdater">
<Description>
Initial topic updater</Description>
<Super>Forum.TopicsPage</Super>
<TimeCreated>63785,86397.415399</TimeCreated>

<Method name="Update">
<ClassMethod>1</ClassMethod>
<FormalSpec>forum="cache"</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	; wSS - write Successful Statuses
	#Define SSa "Statuses of successful update:"
	#Define SSb "-""1"" - In topic updated only views"
	#Define SSc "-""1""-<var>n</var> - In topic added ""n"" posts"
	#Define SSd "-<var>Id</var> - New topic loaded and saved with Id -""Id"""
	#Define wSS w !,$$$SSa,!,$$$SSb,!,$$$SSc,!,$$$SSd,!
	
	if '##class(Forum).NameExists( forum ) {
		k data s data("Name") = forum 
		s sc = ##class(Forum).Insert( .data ) Q:'sc sc
	}
	
	$$$wSS	
	s sc = ..Scan( forum )
	$$$wSS
	
	w !,"Creating TimeLapse... ",!
	s sc = ##class(History.TimeLapse).Insert(forum, .tl)
	w sc
	
	Q sc
]]></Implementation>
</Method>

<Method name="Scan">
<Description>
Scan across all forum topic pages</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>forum="cache"</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	
	s i = 1, sc = 1
	
	s page = ..GetPage( forum, i, .sc ) Q:'sc
	s count = page.Pages() ; get pages count
	s sc = page.Parse() Q:'sc sc
	
	for {
		
		w !, "Page #"_i_" successfuly updated", !
		s i = i + 1  if i > count Q
		s sc = page.Get( , i ) Q:'sc ;load page #i in parser  
		s sc = page.Parse() Q:'sc
		
	}
	Q sc
]]></Implementation>
</Method>

<Method name="OnTopic">
<Description><![CDATA[
Event handler 
<var>data</var> - key-value array with topic properties 
If handler return 0, parsing will be interrupted]]></Description>
<FormalSpec><![CDATA[&data]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

	#define g(%prop) $g(data(%prop))
	
	Q:'##class(Forum).NameExists( ..Forum, .forumId ) 0
	
	s extId = $$$g("ExtId")
	s exist = ##class(Topic).ExtIdExists( extId, .topicId )
	
	#; This Object don't exist
	#; Add new object
	if 'exist {
		s data("Forum") = forumId
		
		s topic = $$$g("ExtId"), amount = $$$g("PagesAmount")
		
		s sc = ##class(Topic).Insert( .data ) Q:'sc sc
		
		s topicId = $g(data) w topicId," "
	
		k data	
		s data("pages") = amount 
		s data("topic") = topic
		
		Q ##class(PostsLoader).Load(.data)
	}
	
	#; This object exist
	s topic = ##class(Topic).%OpenId(topicId)
	#; Update Views
	s topic.Views = $$$g("Views")
	if ..PropertyParse '= "All"{
		s sc = topic.%Save()
		w sc
		Q 1
	}
	
	
	#; If property "Updated" don't changed, than there is nothing to change
	s updated = ##class(Topic).UpdatedGetStored( topicId )
	s mark = $$$g("Mark")
	if updated = $$$g("Updated") {
		s sc = topic.%Save()
		w sc
		;For next case: "marked" topic can haven't new posts but next not "marked" topic can have new post
		s:mark="" ..PropertyParse = "Vies,ExtId"
		Q 1 
	}
	
	#; If updated '= $g(data("Updated")), than
	#; We need to import new posts	
		
	s oldPostsAmount = topic.Answers + 1, ;#(+1) is the post of topic starter
		postsAmount = $$$g("Answers") + 1, ;#(+1) is the post of topic starter
		newPostsAmount = postsAmount - oldPostsAmount,
		pagesAmount = $$$g("PagesAmount")
	
	#; If amount of new posts > 0 
	if newPostsAmount > 0 {

		s topic.Answers = $$$g("Answers")
		s topic.Updated = $$$g("Updated")
		
		}
		
	
	s sc = topic.%Save() 
	
	s topic = $$$g("ExtId")
	
	k data	
	s data("pages") = pagesAmount 
	s data("from") = oldPostsAmount
	s data("to") = postsAmount
	s data("topic") = topic
	
	s:newPostsAmount'=0 sc = ##class(PostsUpdater).Update(.data)
	
	w """",sc,"-",newPostsAmount,""""
	Q sc
]]></Implementation>
</Method>
</Class>
</Export>
